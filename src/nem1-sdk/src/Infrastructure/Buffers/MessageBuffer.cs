// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System;
using io.nem1.sdk.Infrastructure.Imported.FlatBuffers;

namespace io.nem1.sdk.Infrastructure.Buffers
{
    internal struct MessageBuffer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  internal static MessageBuffer GetRootAsMessageBuffer(ByteBuffer _bb) { return GetRootAsMessageBuffer(_bb, new MessageBuffer()); }
  internal static MessageBuffer GetRootAsMessageBuffer(ByteBuffer _bb, MessageBuffer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  internal MessageBuffer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  internal int Type { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  internal int PayloadLen { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  internal sbyte Payload(int j) { int o = __p.__offset(8); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  internal int PayloadLength { get { int o = __p.__offset(8); return o != 0 ? __p.__vector_len(o) : 0; } }
  internal ArraySegment<byte>? GetPayloadBytes() { return __p.__vector_as_arraysegment(8); }

  internal static Offset<MessageBuffer> CreateMessageBuffer(FlatBufferBuilder builder,
      int type = 0,
      int payloadLen = 0,
      VectorOffset payloadOffset = default(VectorOffset)) {
    builder.StartObject(3);
    MessageBuffer.AddPayload(builder, payloadOffset);
    MessageBuffer.AddPayloadLen(builder, payloadLen);
    MessageBuffer.AddType(builder, type);
    return MessageBuffer.EndMessageBuffer(builder);
  }

  internal static void StartMessageBuffer(FlatBufferBuilder builder) { builder.StartObject(3); }
  internal static void AddType(FlatBufferBuilder builder, int type) { builder.AddInt(0, type, 0); }
  internal static void AddPayloadLen(FlatBufferBuilder builder, int payloadLen) { builder.AddInt(1, payloadLen, 0); }
  internal static void AddPayload(FlatBufferBuilder builder, VectorOffset payloadOffset) { builder.AddOffset(2, payloadOffset.Value, 0); }
  internal static VectorOffset CreatePayloadVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  internal static void StartPayloadVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  internal static Offset<MessageBuffer> EndMessageBuffer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<MessageBuffer>(o);
  }
};


}
