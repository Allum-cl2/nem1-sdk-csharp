// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

using System;
using io.nem1.sdk.Infrastructure.Imported.FlatBuffers;

namespace io.nem1.sdk.Infrastructure.Buffers
{
    internal struct ModificationBuffer : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  internal static ModificationBuffer GetRootAsModificationBuffer(ByteBuffer _bb) { return GetRootAsModificationBuffer(_bb, new ModificationBuffer()); }
  internal static ModificationBuffer GetRootAsModificationBuffer(ByteBuffer _bb, ModificationBuffer obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  internal ModificationBuffer __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  internal int StructureLength { get { int o = __p.__offset(4); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  internal int ModificationType { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  internal int CosignatoryPublicKeyLen { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  internal sbyte CosignatoryPublicKey(int j) { int o = __p.__offset(10); return o != 0 ? __p.bb.GetSbyte(__p.__vector(o) + j * 1) : (sbyte)0; }
  internal int CosignatoryPublicKeyLength { get { int o = __p.__offset(10); return o != 0 ? __p.__vector_len(o) : 0; } }
  internal ArraySegment<byte>? GetCosignatoryPublicKeyBytes() { return __p.__vector_as_arraysegment(10); }

  internal static Offset<ModificationBuffer> CreateModificationBuffer(FlatBufferBuilder builder,
      int structureLength = 0,
      int modificationType = 0,
      int cosignatoryPublicKeyLen = 0,
      VectorOffset cosignatoryPublicKeyOffset = default(VectorOffset)) {
    builder.StartObject(4);
    ModificationBuffer.AddCosignatoryPublicKey(builder, cosignatoryPublicKeyOffset);
    ModificationBuffer.AddCosignatoryPublicKeyLen(builder, cosignatoryPublicKeyLen);
    ModificationBuffer.AddModificationType(builder, modificationType);
    ModificationBuffer.AddStructureLength(builder, structureLength);
    return ModificationBuffer.EndModificationBuffer(builder);
  }

  internal static void StartModificationBuffer(FlatBufferBuilder builder) { builder.StartObject(4); }
  internal static void AddStructureLength(FlatBufferBuilder builder, int structureLength) { builder.AddInt(0, structureLength, 0); }
  internal static void AddModificationType(FlatBufferBuilder builder, int modificationType) { builder.AddInt(1, modificationType, 0); }
  internal static void AddCosignatoryPublicKeyLen(FlatBufferBuilder builder, int cosignatoryPublicKeyLen) { builder.AddInt(2, cosignatoryPublicKeyLen, 0); }
  internal static void AddCosignatoryPublicKey(FlatBufferBuilder builder, VectorOffset cosignatoryPublicKeyOffset) { builder.AddOffset(3, cosignatoryPublicKeyOffset.Value, 0); }
  internal static VectorOffset CreateCosignatoryPublicKeyVector(FlatBufferBuilder builder, byte[] data) { builder.StartVector(1, data.Length, 1); for (int i = data.Length - 1; i >= 0; i--) builder.AddByte(data[i]); return builder.EndVector(); }
  internal static void StartCosignatoryPublicKeyVector(FlatBufferBuilder builder, int numElems) { builder.StartVector(1, numElems, 1); }
  internal static Offset<ModificationBuffer> EndModificationBuffer(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<ModificationBuffer>(o);
  }
};


}
